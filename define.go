package goaxis

const (
    C_Mode_Pull = "pull"
    C_Mode_Push = "push"
)

type ICallback interface {
    // // get datas or flow from the scheduling layer, the mode is synchronize or asynchronous
    // Pull(mode string, caller ICaller, dv IDataSet) error

    // // push datas or flow to the scheduling layer, the mode is synchronize or asynchronous
    // Push(mode string, caller ICaller, dv IDataSet) error

    Notify(mode string, caller ICaller, ds IDataSet) error
}

type IHub interface {
    ITask
    Caller(...string) ICaller
}

// define for task
type ICaller interface {
    // get last caller
    Last() string

    // get first caller
    First() string

    // append caller to the chain
    Push(names ...string) ICaller

    // format the whole chain by split
    Format(split string) string
}

type ITask interface {
    // request by sync, example: module A get data from module B
    SyncPull(caller ICaller, dv IDataSet) error

    // request by async, example: websocket module A wait data to send from a channel generated by module B
    ASyncPull(caller ICaller, dv IDataSet) error

    // broadcast data to others module, example: websocket module A broadcast data once receive something from network
    SyncPush(caller ICaller, dv IDataSet) error

    // broadcast data to others module, example: websocket module A broadcast data once receive something from network
    ASyncPush(caller ICaller, dv IDataSet) error
}

// define for data
type IDataSet interface {
    Input() IValue
    Output() IValue
}

type IValue interface {
    IInValue
    IOutValue
}

type IInValue interface {
    // set for simple data type, example: int, bool, string...
    Set(data interface{}) IValue

    // push for array or slice, example: []int, []string...
    Push(datas ...interface{}) IValue

    // fill for map or struct, example: map[string]int, TData...
    Fill(data interface{}) IValue
}

type IOutValue interface {
    // for data with interface{}
    GetValueByFill() interface{}
    GetValueByPush() []interface{}

    // for simple data type, example: int, bool, string...
    Get() interface{}

    // for array or slice, example: []int, []string...
    GetByIndex(index int) interface{}

    // for map or struct, example: map[string]int, TData...
    GetByName(name string) interface{}
}